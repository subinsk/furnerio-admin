// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  admin
  user
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  phone         String?
  password      String?
  emailVerified String?   @map("email_verified")
  image         String?
  role          Role?     @default(user)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  cart          Cart?
  addresses     Address[]
  orders        Order[]

  @@map("users")
}

model Category {
  id            String     @id @default(uuid())
  name          String     @unique
  slug          String     @unique
  description   String?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  products      Product[]
  parent        Category?  @relation("SubCategories", fields: [parentId], references: [id])
  parentId      String?
  subCategories Category[] @relation("SubCategories")

  @@map("categories")
}

model Product {
  id             String   @id @default(uuid())
  slug           String   @unique
  sku            String   @unique
  code           String?
  name           String
  subDescription String?
  content        String?
  images         String[]
  quantity       Int
  category       Category @relation(fields: [categoryId], references: [id])
  categoryId     String
  saleLabel      String?
  newLabel       String?
  price          Float
  mrp            Float
  orders         Order[]
  cart           Cart[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("products")
}

model Cart {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@map("carts")
}

model Order {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("orders")
}

model Address {
  id        String   @id @default(uuid())
  street    String
  city      String
  state     String
  country   String
  zip       String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}
